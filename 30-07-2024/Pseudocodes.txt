19. To find average of two numbers:

pseudo:
	Input num1
	Input num2
	Sum = num1 + num2
	Average = Sum/2
	print Average

20.To find cube of a number

Pseudo:
	Input num
	cube = num*num*num
	print cube
Pseudo : routine
	function Findcube(num)
	  cube = num*num*num
	return cube
	
Pseudo :routineTest
	function TestFindcube()
	  Input num
	  cube = Findcube(num)
	return cube

15.To find square of a number

Pseudo:
	function FindSquare(num)
	  Square = num*num
	return Square

Pseudo: Routine test
	function TestFindSquare()
	  Input num
	  Square = Findsquare(num)
	return Square	

9.Swap two numbers 
Pseudo:
  Input = num1
  Input = num2
  temp = num1
  num1 = num2
  num2 = temp
  print(num1, num2)

Pseudo : routine
  function Swapnumbers(num1,num2)
    num1,num2 = num2 ,num1
  return num1 num2

Pseudo : routin test
function TestSwapnumbers()
  Input num1
  Input num2
  Swap = Swapnumbers(num1,num2)
return Swap

28.To check nubmer is divisible by 3
Pseudo:
function IsDivisibleBy3(num)
  if num%3 ==0
    return True
  else
    return False

Pseudo : routine test
function TestIsDivisibleBy3()
  Input num
  if IsDivisibleBy3(num)
            print "Divisible By 3"
        else 
            print "Not Divisible By 3"


11.To check nubmer is divisible by 27
Pseudo:
function IsDivisibleBy27(num)
  if num % 27 ==0
    return True
  else
    return False

Pseudo : routine test
function TestIsDivisibleBy27()
  Input num
  if IsDivisibleBy27(num)
            print "Divisible By 27"
        else 
            print "Not Divisible By 27"

14.To print N natural numbers
Pseudo:
function PrintNumbers(N)
  for num in range 1 to N+1
    print num
  end
end

Pseudo : routine test
function TestPrintNumbers()
Input N
numbers = PrintNumbers(N)

1.To check a number palindrome
Pseudo :
function CheckPallindrom(num)
  revnum =0
  temp = num
  while temp>0
     dig = temp%10
     revnum = revnum*10 + dig
     temp = temp/10
if revnum ==n um		
   return True
  else
    return False
Pseudo : routine test
function TestCheckPallindrom()
  Input = num
  pallindrom = CheckPallindrom(num)
  if True
    print "it is pallidrom"
  else
    print "it is  not pallidrom"



2.To check a number amstrong
Pseudo:
function CheckAmstrong(num)
  power =len(num)
  temp = num
  sum = 0
  while(temp>0)
    dig = temp % 10
    sum = sum + dig**power
    temp = temp/10
  end
if sum == num
  return True
else 
  return False

Pseudo: routine test
function TestCheckAmstrong
  Input num
  Amstrong =  CheckAmstrong(num)
  if True 
    print " Amstrong number"
 else 
    print " Not Amstrong number"

3.To check a number prime
function CheckPrime(num)
  if num == 1
    print " not prime"
  elif num>1
    for i in range 2 to num
      if num % i == 0
          print "not prime"
          break
  else :
    print " prime number"

pseudo: Routine Test
function TestCheckPrime()
Input = num
check = CheckPrime(num)
if True
  print "not prime"
else
  print "prime

7. To check a number perfect number
function CheckPerfect(num)
sum = 0
for i in range 1 to num-1
  if num % i == 0
    sum = sum + i
if sum == num
  print "perfect number"
else 
print " not perfect number"

17.To check number is odd or even
Pseudo :
function CheckOddOrEven(num)
if num % 2 == 0
  return Even
else 
  return Odd 

pseudo: routine test
function TestCheckOddOrEven()
Input = num
OddEven = CheckOddOrEven(num)
if True
 print "Even"
else 
  print "Odd"

18. To check a year leap
pseudo:
function CheckLeap(year)
if year % 4== 0
  if year % 100 == 0
    if year % 400 == 0
        return True
else 
  return False
Pseudo: routine test
function TestlCheckLeap()
Input = year
Leap = CheckLeap(year)
if True
  print "Leap year"
else 
   print "Not a Leap year"


21. To check a number perfect square or not
pseudo:
function CheckPerfectSquare(num)
initiate i = 1
while i*i <= num
  if i*i == num
    return True
  i = i+1
return False

pseudo :routine test
function TestCheckPerfectSquare()
Input = num
PerfSqure = CheckPerfectSquare(num)
if True 
    print " Perfect square" 
else
    print "Perfect square"

5. Reverse the number
Pseudo:
function ReverseNumber(num)
revnum =0
while num>0
     dig = num % 0
     revnum = revnum*10 + dig
     num = num/10
return revnum

pseudo: routine test
function TestReverseNumber()
Input = num
Reverse = ReverseNumber(num)
return Reverse

6. Factorials of the number
pseudo :
function FindFactorial(num)
result = 1
for i in range 1 to num+1
  result = result * i
return result

pseudo: routine test
function TestFindFactorial()
Input = num
Factorial = FindFactorial(num)
return Factorial

4. Fibonacci
pseudo :
function FibonacciSeries(num)
  first = 0
  second = 1
  count = 0
  while count < n
    print first
    temp = first
    first = second
    second = temp + second
    count++
end

pseudo: routine test
function TestFibonacciSeries()
Input = num
Series = FibonacciSeries(num)
return Series


22.To print prime numbers between in the limit
pseudo :
function PrintPrime(limit1,limit2)
for n in range limit1 to limit2+1
  if CheckPrime(n)
    Print num
function  CheckPrime(num)
  if num <=1
    return false
  for i in range 2 to num
      if num % i == 0
        return false
  return True

pseudo: routine test
function TestPrintPrime()
Input = limit1
Input = limit2
Primenumbers = PrintPrime(limit1,limit2)
Return Primenumbers